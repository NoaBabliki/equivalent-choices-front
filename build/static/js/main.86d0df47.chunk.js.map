{"version":3,"sources":["APIConstants.js","api.ts","components/StartExperiment.js","constants.js","components/ChooseOptions.js","components/Slider.js","components/AddCustomItems.js","components/RateSingleOption.js","components/RateSingleOptionWrapper.js","components/RateOptions.js","components/OverallRatings.js","components/FirstStageWrapper.js","components/SelectOptionTable.js","components/OptionBox.js","components/DialogBox.js","components/CompareTwoOptions.js","components/ThankYouScreen.js","components/SecondStageWrapper.js","App.tsx","reportWebVitals.ts","index.tsx"],"names":["SERVER_PATH","createApiClient","getProperties","client_categories","a","axios","get","params","res","data","CLASS_NAME_WELCOME","StartExperiment","props","showPage","title","instructions","className","nextButton","onClick","nextButtonAction","setState","page","state","setFlow","this","flow","first_title","second_title","React","PureComponent","CATEGORY_1_SINGULAR","CATEGORY_2_SINGULAR","MAX_RATING","ChooseOptions","showOption","option","index","remove_button","setCategories","category_arr","showUndoButton","undo_button","categories","sort","Math","random","paginatedData","slice","length","items_left","filter","item","includes","category","setCategory","category_to_add","category_catche","to_remove","to_remove_index","findIndex","new_category_arr","concat","to_undo","pop","old_value","disable","undo","disabled","obj","setCategoryArray","removeButtonAction","name","two_d_data","category_arr_copy","push","splice","map","d","i","noMoreAlternativesMsg","createTable","Slider","current_rating","defaultRating","default_rating","value","getValue","ReactSlider","thumbClassName","trackClassName","min","max","constants","valueLabelDisplay","defaultValue","renderThumb","onChange","sliderChange","valueNow","Component","AddCustomItems","category_name","current_option_index","options_added","disable_next_button","current_option_name","current_option_rating","setRatingToMiddle","disable_option_adding","handleChange","bind","handleSubmit","localStorage","getItem","parseInt","String","showInstructions","addOption","round","desplayIndex","event","target","setItem","newOption","id","maxId","rating","addParticipentOptions","close_to_max","disable_submit","disableSubmit","type","optionSlider","removeItem","main","disableNextButton","RateSingleOption","cur_option","cur_rating","ratingChange","rateOption","RateSingleOptionWrapper","new_option","next_option","RateOptions","max_id","restOfData","category_items","rest_of_data","cur_option_index","nextOption","new_category_items","new_categpry_items_full","console","log","OverallRatings","ratings","createRatingArray","options","num_options","Array","fill","newRatings","newOptions","showAllOptions","FirstStageWrapper","category_index","setCategoryIndex","numCategories","SelectOptionTable","shuffled_category","default_msg","useState","chosen","setChosen","show","setShow","margin","setMargin","OptionBox","showSlider","showAttr","attr","attr1","attr2","DialogBox","answer","setAnswer","setDisable","checked","save_answer","DEFAULT_MSG","CompareTwoOptions","cur_chosen","attr_array","chooseAttribues","disable_next","call_timer","show_dialog_box","setDisableNext","saveDialogAnswer","rand_index","floor","fillArray","start_rand","end_rand","start_op","end_op","arrays","half_length","array","rand_attr","is_attention_check","cur_match","fillAllAttributes","fillOneOption","attentionCheck","j","mountTime","Date","getTime","saveAndContinue","reaction_time","updated_set","cur_set","option1","option2","attr_chosen","is_equivalent","to_seconds","setTimeout","categories_to_choose","showOptions","ThankYouScreen","clear","SecondStageWrapper","cur_set_array","choices","cur_set_categories","option_to_return","new_cur_set_categories","array_item","findItemsToRemove","new_cur_array","getOptionForNextMatch","new_choices","setChoices","api","apiChoices","equivalent_choices","App","client_catigories","createOptions","str_arr","id_inc","options_array","temp_option","add_to_index","newCategory","new_client_categories","new_caterories","setMaxCategoryId","temp_id","title_2","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.86d0df47.chunk.js","sourcesContent":["export const SERVER_API_PORT = 3001\r\nexport const API_PATH = '/'\r\nexport const SERVER_PATH = 'https://equivalent-choices.herokuapp.com/'\r\nexport const CHOICES_API_PATH = 'equivalent-choices'\r\nexport const SERVER_PATH_CHOICES = SERVER_PATH + CHOICES_API_PATH","import axios from 'axios';\nimport {SERVER_PATH, SERVER_PATH_CHOICES} from './APIConstants'\n\nexport type ApiClient = {\n    getProperties: (client_categories: object[][]) => Promise<object[][]>;\n}\n\nexport type ApiClientChoices = {\n    getProperties: (equivalent_choices: object[][]) => Promise<object[][]>;\n}\n\n\n/** get tickets with search and page queries */\nexport const createApiClient = (): ApiClient => {\n    return {\n        getProperties: async (client_categories: object[][]) => {\n            const res = await axios.get(SERVER_PATH, { params: { client_categories: client_categories } });\n            return res.data;\n        }\n    }\n}\n\nexport const createApiClientChoices = (): ApiClientChoices => {\n    return {\n        getProperties: async (equivalent_choices: object[][]) => {\n            const res = await axios.get(SERVER_PATH_CHOICES, { params: { equivalent_choices: equivalent_choices } });\n            return res.data;\n        }\n    }\n}\n\n\nexport default createApiClient\n\n","import React from 'react'\r\nimport '../App.css'\r\n\r\nconst CLASS_NAME_WELCOME = 'title-1'\r\nconst CLASS_NAME_INSTRUCTIONS = 'title-2'\r\nconst INSTRUCTIONS_TITLE = 'Instructions'\r\n\r\nexport class StartExperiment extends React.PureComponent {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            page: 1,\r\n        }\r\n    }\r\n\r\n    showPage = (title, instructions, className) => {\r\n        return(\r\n            <div>\r\n            <h1 className={className}>{title}</h1>\r\n            <h2 className='instructions'>{instructions}</h2>\r\n            <h2 className='continue'>Press the 'next' button to continue</h2>\r\n            {this.nextButton()}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    nextButton = () => {\r\n        return (\r\n            <button className='next-button' onClick={() => {this.nextButtonAction()}}>next</button>\r\n        )\r\n    }\r\n\r\n    nextButtonAction = () => {\r\n        this.setState({page: this.state.page + 1})\r\n        if (this.state.page === 3){\r\n            this.props.setFlow()\r\n        }\r\n\r\n    }\r\n    \r\n    render(){\r\n        return (\r\n            <div>\r\n                {(this.props.flow === 3 && this.state.page === 1)?\r\n                this.setState({page: this.state.page + 1}) :\r\n                this.state.page === 1?\r\n                this.showPage(this.props.first_title, '', CLASS_NAME_WELCOME) : \r\n                this.state.page === 2?\r\n                this.showPage(this.props.second_title, '', CLASS_NAME_WELCOME) : \r\n                this.state.page === 3?\r\n                this.showPage(INSTRUCTIONS_TITLE, this.props.instructions, CLASS_NAME_INSTRUCTIONS) :\r\n                null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default StartExperiment","export const CATEGORY_1 = \"Concert tickets\"\r\nexport const CATEGORY_2 = \"Workshops\"\r\nexport const CATEGORY_1_SINGULAR = \"Concert ticket\"\r\nexport const CATEGORY_2_SINGULAR = \"Workshop\"\r\nexport const MAX_CATEGORY_DISPLAY = 4\r\nexport const NUM_CUSTOM_OPTIONS = 1 //number of custom options the participent can add to each category\r\nexport const MIN_RATING = 1\r\nexport const MAX_RATING = 1000\r\nexport const RATING_MARGIN = 200 // how close do we want the rating of the new options to be to the min/max values\r\nexport const MINIMAL_TIME = 1 //in seconds\r\nexport const N_MATCHES = 3\r\nexport const N_SETS = 2\r\nexport const ATTENTION_TRIALS = 10 //presentage of trials to be attention trails\r\n","import React from 'react'\r\nimport '../App.css'\r\nimport * as constants from '../constants.js'\r\n\r\nconst INSTRUCTIONS_PART_1 = 'These are the options for'\r\nconst INSTRUCTIONS_PART_2 = 'you will be asked to rate:'\r\nconst INSTRUCTIONS_PART_3 = 'Please click on any option you don’t understand or have no preference for to replace it with a different one.'\r\nconst INSTRUCTIONS_PART_4 = 'After replacing options, press the next button to continue.'\r\nconst WARNING_MSG = 'No more alternatives to choose from.'\r\n\r\nexport class ChooseOptions extends React.PureComponent {\r\n    constructor(props){\r\n        super(props)\r\n        const data = this.props.categories[this.props.index].sort(function(){ return Math.random() - 0.5});\r\n        const paginatedData = data.slice(data.length - constants.MAX_CATEGORY_DISPLAY);\r\n        const items_left = data.filter( ( item ) => !paginatedData.includes( item ) );\r\n        this.state = {\r\n            category: this.props.setCategory(),\r\n            category_arr: paginatedData,\r\n            category_to_add: items_left,\r\n            category_catche: []\r\n        }\r\n    }\r\n\r\n\r\n    setCategoryArray(to_remove){\r\n        var to_remove_index = this.state.category_arr.findIndex(item => item === to_remove)\r\n        var new_category_arr = this.state.category_arr.slice(0)\r\n        new_category_arr[to_remove_index] = this.state.category_to_add[0]\r\n        this.setState({category_arr: new_category_arr,\r\n        category_catche: this.state.category_catche.concat([[to_remove, to_remove_index]]),\r\n        category_to_add: this.state.category_to_add.slice(1)\r\n        });\r\n    }\r\n\r\n\r\n    undo(){\r\n        const to_undo = this.state.category_catche.pop()\r\n        var new_category_arr = this.state.category_arr.slice(0)\r\n        var old_value = new_category_arr[to_undo[1]]\r\n        new_category_arr[to_undo[1]] = to_undo[0]\r\n        this.setState({category_arr: new_category_arr,\r\n            category_to_add: [old_value].concat(this.state.category_to_add),\r\n            });     \r\n    }\r\n\r\n\r\n    undo_button(){\r\n        var disable = false\r\n        if (this.state.category_catche.length === 0){\r\n            disable = true\r\n        }\r\n        return (\r\n            <button onClick={() => {this.undo()}} disabled={disable}>Undo</button>\r\n        )\r\n    }\r\n\r\n    removeButtonAction(obj){\r\n        if (this.state.category_to_add.length > 0){\r\n            this.setCategoryArray(obj)\r\n        }\r\n    }\r\n\r\n\r\n    remove_button(obj){\r\n        return (\r\n            <button className='table-button' onClick={() => {this.removeButtonAction(obj)}}>{obj.name}</button>\r\n        )\r\n    }\r\n\r\n    noMoreAlternativesMsg(){\r\n        if (!this.state.category_to_add.length){\r\n            return (<h4 className='warning'>{WARNING_MSG}</h4>)\r\n        }   \r\n    }\r\n\r\n\r\n    createTable(){\r\n        const n_cols = 4\r\n        var two_d_data = []\r\n        const category_arr_copy = this.state.category_arr.slice(0)\r\n        while(category_arr_copy.length) two_d_data.push(category_arr_copy.splice(0,n_cols));\r\n        return (\r\n            <div>\r\n            <table className='table-border'>\r\n                    <tbody>\r\n                {two_d_data.map((d, i)=> (\r\n                    <tr key={i}>\r\n                        {d.map((option, index) => this.showOption(option, index))}\r\n                    </tr>))}\r\n                    </tbody>\r\n                </table>\r\n                <div>\r\n                    {this.noMoreAlternativesMsg()}\r\n                </div>\r\n                </div>\r\n        )\r\n    }\r\n\r\n    showOption = (option, index) => {\r\n        return (\r\n            <td key={index}>{this.remove_button(option)}</td>\r\n        )\r\n    }\r\n\r\n    nextButtonAction = () => {\r\n        this.props.setCategories(this.state.category_arr)\r\n        this.props.setFlow()  \r\n    }\r\n\r\n    showUndoButton = () => {\r\n        return (\r\n            <h3 className='instructions'>Press {this.undo_button()} to undo</h3>\r\n        )\r\n    }\r\n\r\n   \r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3 className='instructions'>{INSTRUCTIONS_PART_1}</h3>\r\n                <h3 className='category-name'>{this.state.category}</h3>\r\n                <h3 className='instructions'>{INSTRUCTIONS_PART_2}</h3>\r\n                {this.props.categories ? this.createTable(): null}\r\n                <h3 className='instructions'>{INSTRUCTIONS_PART_3}</h3>\r\n                    {this.showUndoButton()}\r\n                <h3 className='continue'>{INSTRUCTIONS_PART_4}</h3>\r\n                <button className='next-button' onClick={()=>{this.nextButtonAction()}}>next</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ChooseOptions","import React from 'react'\r\nimport * as constants from '../constants.js'\r\nimport ReactSlider from \"react-slider\";\r\n\r\n\r\nexport class Slider extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            current_rating: this.defaultRating(),\r\n        }\r\n    }\r\n\r\n    defaultRating(){\r\n        return (this.props.default_rating)\r\n    }\r\n\r\n    sliderChange(value) {\r\n        if (this.state.current_rating !== value){\r\n            this.setState({\r\n                current_rating: value,\r\n            })\r\n            if (this.props.index){\r\n            this.props.getValue(value, this.props.index)\r\n            }\r\n            else{\r\n                this.props.getValue(value)\r\n            } \r\n        }   \r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            <ReactSlider\r\n                        className=\"horizontal-slider\"\r\n                        thumbClassName=\"example-thumb\"\r\n                        trackClassName=\"example-track\"\r\n                        disabled={this.props.disabled} //create disable prop or state\r\n                        min={constants.MIN_RATING}\r\n                        max={constants.MAX_RATING}\r\n                        valueLabelDisplay=\"on\"\r\n                        defaultValue={this.defaultRating()}\r\n                        renderThumb={(props, state) => <div {...props} onChange={this.sliderChange(state.valueNow)}>{state.valueNow}</div>}\r\n                    />\r\n                </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default Slider","import React from 'react'\r\nimport '../App.css'\r\nimport * as constants from '../constants.js'\r\nimport Slider from './Slider';\r\n\r\nconst INSTRUCTIONS_PART_1 = 'In addition to the previous options, you can add'\r\nconst INSTRUCTIONS_PART_2 = 'more options of your own to category'\r\nconst INSTRUCTIONS_PART_3 = 'Please add options that are close to the edges of the preference scale - very highly preferred (close to'\r\nconst INSTRUCTIONS_PART_4 = ') or very lowly preferred (close to'\r\nconst INSTRUCTIONS_PART_5 = ').'\r\nconst INSTRUCTIONS_PART_6 = 'Please add an option and rate it (option'\r\nconst INSTRUCTIONS_PART_7 = 'out of'\r\n\r\nexport class AddCustomItems extends React.PureComponent {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            category_name: this.props.setCategory(),\r\n            current_option_index: 0,\r\n            options_added: [],\r\n            disable_next_button: true,\r\n            current_option_name: \"\",\r\n            current_option_rating: this.setRatingToMiddle(),\r\n            disable_option_adding: false\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.sliderChange = this.sliderChange.bind(this);\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        if ((localStorage.getItem('option_index')) && this.state.flow !== parseInt(String(localStorage.getItem('option_index')), 10)){\r\n            this.setState({\r\n                current_option_index: parseInt(String(localStorage.getItem('option_index')), 10)\r\n            })\r\n        }\r\n    }\r\n\r\n    main(){\r\n        return (\r\n            <div>\r\n                {this.showInstructions()}\r\n                {this.addOption()}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    setRatingToMiddle(){\r\n        return (Math.round((constants.MIN_RATING + constants.MAX_RATING) / 2))\r\n    }\r\n\r\n    desplayIndex(){\r\n        if (this.state.current_option_index === constants.NUM_CUSTOM_OPTIONS){\r\n            return (this.state.current_option_index)\r\n        }\r\n        else{\r\n            return (this.state.current_option_index + 1)\r\n        }\r\n    }\r\n\r\n    showInstructions(){\r\n\r\n        return(\r\n            <div>\r\n            <h3 className='instructions'>{INSTRUCTIONS_PART_1}</h3>\r\n            <h3 className='category-name'>{constants.NUM_CUSTOM_OPTIONS}</h3>  \r\n            <h3 className='instructions'>{INSTRUCTIONS_PART_2}</h3>\r\n            <h3 className='category-name'>{this.state.category_name}.</h3>\r\n            <h3 className='instructions'>{INSTRUCTIONS_PART_3}{constants.MAX_RATING}\r\n            {INSTRUCTIONS_PART_4}{constants.MIN_RATING}{INSTRUCTIONS_PART_5}</h3>\r\n            <h3 className='instructions'> {INSTRUCTIONS_PART_6}</h3>\r\n            <h3 className='category-name'>{this.desplayIndex()}</h3>\r\n            <h3 className='instructions'>{INSTRUCTIONS_PART_7}</h3>\r\n            <h3 className='category-name'>{constants.NUM_CUSTOM_OPTIONS}</h3>\r\n            <h3 className='instructions'>{INSTRUCTIONS_PART_5}</h3>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    handleChange(event){\r\n        this.setState({\r\n            current_option_name: event.target.value})\r\n    }\r\n\r\n    handleSubmit(event){\r\n        localStorage.setItem('option_index', this.state.current_option_index + 1)\r\n        let newOption = {\r\n            id: this.props.maxId + this.state.current_option_index,\r\n            name: this.state.current_option_name,\r\n            rating: this.state.current_option_rating\r\n        }\r\n        this.state.options_added.push(newOption)\r\n        this.setState({\r\n            current_option_index: this.state.current_option_index + 1,\r\n            current_option_name: \"\",\r\n            current_option_rating: this.setRatingToMiddle(),\r\n        })\r\n        if (this.state.current_option_index + 1 === constants.NUM_CUSTOM_OPTIONS){\r\n            this.props.addParticipentOptions(this.state.options_added)\r\n            this.setState({\r\n                disable_option_adding: true\r\n            })\r\n        }\r\n    }\r\n\r\n    sliderChange(value){\r\n        if (value !== this.state.current_option_rating){\r\n            this.setState({current_option_rating: value})\r\n        }   \r\n    }\r\n\r\n    disableSubmit(){\r\n        const close_to_max = (constants.MAX_RATING - this.state.current_option_rating < constants.RATING_MARGIN)\r\n        const close_to_min = (constants.MIN_RATING + this.state.current_option_rating < constants.RATING_MARGIN)\r\n        if ((close_to_min || close_to_max) && this.state.current_option_name){\r\n           return (false)\r\n        }\r\n        else{\r\n            return (true)\r\n        }\r\n    }\r\n\r\n\r\n    //get input\r\n    addOption(){\r\n        let disable_submit = this.disableSubmit()\r\n        return(\r\n            <div>\r\n                <label className='instructions'>\r\n                    Option Name: \r\n                    <input className='instructions' type=\"text\" disabled={this.state.disable_option_adding} value={this.state.current_option_name} onChange={this.handleChange}></input>\r\n                </label>\r\n                <div>\r\n                {this.optionSlider()}\r\n                </div>\r\n                <input className='submit-button' type=\"submit\" value=\"submit\" disabled={disable_submit} onClick={this.handleSubmit}></input>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n    // show and save option's rating\r\n    optionSlider(){\r\n        return (\r\n            <Slider\r\n            key={this.state.current_option_index}\r\n            disabled={this.state.disable_option_adding}\r\n            default_rating={Math.round((constants.MIN_RATING + constants.MAX_RATING) / 2)}\r\n            getValue={this.sliderChange}>\r\n            </Slider>\r\n        )\r\n    }\r\n\r\n    disableNextButton(){\r\n        this.setState({\r\n            disable_next_button: false,\r\n        })\r\n    }\r\n\r\n    nextButtonAction(){\r\n        localStorage.removeItem('option_index')\r\n        this.props.setFlow()\r\n    }\r\n\r\n    //participent types the option in the box in addOption\r\n    //participent rates the option in the slider\r\n    //submit option with rating and continue\r\n    // inforce the options to be rated close to 1000 or 0\r\n    render(){\r\n        return (\r\n            <div>\r\n                {constants.NUM_CUSTOM_OPTIONS !== 0?\r\n                this.main() : this.nextButtonAction()}\r\n                {this.state.current_option_index !== constants.NUM_CUSTOM_OPTIONS?\r\n                null : this.disableNextButton()}\r\n                <button className='next-button' disabled={this.state.disable_next_button} \r\n                onClick={()=>{this.nextButtonAction()}}>next</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddCustomItems;","import React from 'react'\r\nimport '../App.css'\r\nimport Slider from './Slider';\r\nimport * as constants from '../constants'\r\n\r\n\r\nexport class RateSingleOption extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            cur_option: this.props.option,\r\n            cur_rating: 0,\r\n        }\r\n        this.sliderChange = this.sliderChange.bind(this)\r\n    }\r\n\r\n\r\n    sliderChange(value){\r\n        if (this.state.cur_rating !== value){\r\n            this.setState({\r\n                cur_rating: value,\r\n            })\r\n            this.props.ratingChange(value)\r\n        }\r\n    }\r\n\r\n    rateOption(){\r\n        return(\r\n               <Slider\r\n               disabled={false}\r\n               default_rating={Math.round((constants.MIN_RATING + constants.MAX_RATING) / 2)}\r\n               getValue={this.sliderChange}>\r\n               </Slider>\r\n        )\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            {this.state.cur_option? this.rateOption() : null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RateSingleOption","import React from 'react'\r\nimport '../App.css'\r\nimport RateSingleOption from './RateSingleOption';\r\n\r\n\r\nexport class RateSingleOptionWrapper extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            disable_next_button: true,\r\n            cur_rating: 0,\r\n        }\r\n        this.ratingChange = this.ratingChange.bind(this)\r\n    }\r\n\r\n    main(){\r\n        return(\r\n            <div>\r\n                {this.instructions()}\r\n                <RateSingleOption\r\n                key={this.props.option.id}\r\n                option={this.props.option}\r\n                ratingChange={this.ratingChange}>\r\n                </RateSingleOption>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    ratingChange(value){\r\n        this.setState({\r\n            disable_next_button: false,\r\n            cur_rating: value\r\n        })\r\n    }\r\n\r\n    instructions(){\r\n        return (\r\n            <div>\r\n            <h3 className='instructions'>What is your preference for</h3>\r\n            <h3 className='category-name'>{this.props.option.name}</h3>\r\n            <h3 className='instructions'>?</h3>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    nextButtonAction(){\r\n        let new_option = this.props.option\r\n        new_option.rating = this.state.cur_rating\r\n        this.props.next_option(new_option)\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            {this.props.option? this.main() : null}\r\n            <button className='next-button' disabled={this.state.disable_next_button} \r\n                onClick={()=>{this.nextButtonAction()}}>next</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RateSingleOptionWrapper","import React from 'react'\r\nimport '../App.css'\r\nimport RateSingleOptionWrapper from './RateSingleOptionWrapper';\r\n\r\nexport class RateOptions extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        const data = this.props.categories[this.props.index].sort(function(){ return Math.random() - 0.5});\r\n        const paginatedData = data.filter(item => item.id < this.props.max_id)\r\n        const restOfData = data.filter(item => item.id >= this.props.max_id)\r\n        this.state = {\r\n            category_items: paginatedData,\r\n            rest_of_data: restOfData,\r\n            cur_option_index: 0,\r\n        }\r\n        this.nextOption=this.nextOption.bind(this)\r\n    }\r\n\r\n    nextOption(new_option){\r\n        let new_category_items = this.state.category_items.slice(0)\r\n        new_category_items[this.state.cur_option_index] = new_option\r\n        let new_categpry_items_full = new_category_items.concat(this.state.rest_of_data)\r\n        this.props.setCategories(new_categpry_items_full)\r\n        if (this.state.cur_option_index + 1 < this.state.category_items.length){\r\n            this.setState({\r\n                category_items: new_category_items,\r\n                cur_option_index: this.state.cur_option_index + 1\r\n            })\r\n        }\r\n        else{\r\n            this.props.setFlow()\r\n        }\r\n    }\r\n    \r\n    render(){\r\n        return (\r\n            <div>\r\n                {this.state.category_items? <RateSingleOptionWrapper\r\n                key={this.state.cur_option_index}\r\n                option={this.state.category_items[this.state.cur_option_index]}\r\n                next_option={this.nextOption}>\r\n                </RateSingleOptionWrapper> : console.log('no categories')}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RateOptions","import React from 'react'\r\nimport Slider from './Slider.js'\r\n\r\nconst INSTRUCTIONS = 'These are your preferences for the options presented. You may adjust them now to your liking.'\r\nconst INDEX_DEV = 1\r\n\r\nexport class OverallRatings extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            ratings: this.createRatingArray()\r\n        }\r\n        this.sliderChange = this.sliderChange.bind(this)\r\n    }\r\n\r\n    createRatingArray(){\r\n        const options = this.props.client_categories[this.props.index]\r\n        const num_options = options.length\r\n        let ratings = new Array(num_options + 1).fill(0)\r\n        for (let i = INDEX_DEV; i<num_options+INDEX_DEV; i++){\r\n            ratings[i] = options[i-INDEX_DEV].rating\r\n        }\r\n        return (ratings)\r\n    }\r\n\r\n    sliderChange(value, index){\r\n        if (value !== this.state.ratings[index]){\r\n            let newRatings = this.state.ratings.slice(0)\r\n            newRatings[index] = value\r\n            this.setState({\r\n                ratings: newRatings\r\n            }) \r\n        }\r\n    }\r\n    //create 2d array and show in table!\r\n    showAllOptions(){\r\n        const n_cols = 2\r\n        var two_d_data = []\r\n        const category_arr_copy = this.props.client_categories[this.props.index].slice(0)\r\n        while(category_arr_copy.length) two_d_data.push(category_arr_copy.splice(0,n_cols));\r\n        return (\r\n            <div>\r\n            <table className='table-no-border'>\r\n                    <tbody>\r\n                {two_d_data.map((d, i)=> (\r\n                    <tr key={i} className='table-no-border'>\r\n                        {d.map((option, index) => this.showOption(option, index + INDEX_DEV + (i*n_cols)))}\r\n                    </tr>))}\r\n                    </tbody>\r\n                </table>\r\n                </div>\r\n        )\r\n    }\r\n\r\n    showOption(option, index){\r\n        return(\r\n        <td className='table-no-border'>\r\n            <h4 className='option-name'>{option.name}:</h4>\r\n            {option? \r\n            <Slider\r\n                key={option.id}\r\n                index={index}\r\n                disabled={false}\r\n                default_rating={option.rating}\r\n                getValue={this.sliderChange}>\r\n            </Slider>: null}\r\n        </td>            \r\n        )\r\n    }\r\n\r\n    nextButtonAction(){\r\n        const options = this.props.client_categories[this.props.index]\r\n        const num_options = options.length\r\n        let newOptions = options.slice(0)\r\n        for (let i = 0; i < num_options; i++){\r\n            newOptions[i].rating = this.state.ratings[i + INDEX_DEV]\r\n        }\r\n        this.props.setCategories(newOptions)\r\n        this.props.setFlow()\r\n    }\r\n    \r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <h3 className='instructions'>{INSTRUCTIONS}</h3>\r\n                {this.props.categories? this.showAllOptions() : null}\r\n                <button className='next-button' onClick={()=>{this.nextButtonAction()}}>next</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default OverallRatings","import React from 'react'\r\nimport * as constants from '../constants.js'\r\nimport ChooseOptions from './ChooseOptions';\r\nimport AddCustomItems from './AddCustomItems';\r\nimport RateOptions from './RateOptions';\r\nimport OverallRatings from './OverallRatings.js';\r\n\r\nexport class FirstStageWrapper extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            flow: 1,\r\n            category_index: 0,\r\n        }\r\n        this.setFlow = this.setFlow.bind(this)\r\n    }\r\n    \r\n    componentDidMount() {\r\n        if ((localStorage.getItem('second_stage_flow')) && this.state.flow !== parseInt(String(localStorage.getItem('second_stage_flow')), 10)){\r\n            this.setState({\r\n                flow: parseInt(String(localStorage.getItem('second_stage_flow')), 10)\r\n            })\r\n        }\r\n        if ((localStorage.getItem('category_index')) && this.state.category_index !== parseInt(String(localStorage.getItem('category_index')), 10)){\r\n            this.setState({\r\n                category_index: parseInt(String(localStorage.getItem('category_index')), 10)\r\n            })\r\n        }\r\n      }\r\n\r\n    componentDidUpdate(){\r\n\r\n        if ((localStorage.getItem('second_stage_flow')) && this.state.flow !== parseInt(String(localStorage.getItem('second_stage_flow')), 10)){\r\n            this.setState({\r\n                flow: parseInt(String(localStorage.getItem('second_stage_flow')), 10)\r\n            })\r\n        }\r\n        if ((localStorage.getItem('category_index')) && this.state.category_index !== parseInt(String(localStorage.getItem('category_index')), 10)){\r\n            this.setState({\r\n                category_index: parseInt(String(localStorage.getItem('category_index')), 10)\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    setFlow(){\r\n        localStorage.setItem('second_stage_flow', this.state.flow + 1)\r\n        this.setState({flow: this.state.flow + 1})\r\n    }\r\n\r\n    setCategoryIndex(){\r\n        localStorage.removeItem('second_stage_flow')\r\n        if (this.state.category_index + 1 < this.props.categories.length){\r\n            localStorage.setItem('category_index', this.state.category_index + 1)\r\n            this.setState({\r\n                category_index: this.state.category_index + 1,\r\n                flow: 1,\r\n            })\r\n            this.props.setCategoryIndex()\r\n        }\r\n        else{\r\n            localStorage.removeItem('category_index')\r\n            this.props.setFlow()\r\n        }\r\n    }\r\n\r\n    setCategory = () => {\r\n        const names = [constants.CATEGORY_1, constants.CATEGORY_2]\r\n        return (names[this.state.category_index])     \r\n    }\r\n    \r\n\r\n    render() {\r\n        let flow = this.state.flow\r\n        return(\r\n        <main>\r\n        <div>  \r\n      {(this.props.categories && flow === 1)?\r\n      <ChooseOptions key={this.state.category_index} \r\n        categories={this.props.categories} \r\n        index={this.state.category_index}\r\n        setCategories={this.props.setCategories}\r\n        setCategory={this.setCategory}\r\n        setFlow={this.setFlow}>\r\n      </ChooseOptions> : null}\r\n      </div>\r\n      <div>\r\n        {flow === 2?\r\n        <AddCustomItems\r\n        key={this.state.category_index}\r\n        index={this.state.category_index}\r\n        setCategory={this.setCategory}\r\n        addParticipentOptions={this.props.addParticipentOptions}\r\n        numCategories={this.props.categories.length}\r\n        maxId={this.props.max_id}\r\n        setFlow={this.setFlow}>\r\n        </AddCustomItems> : null}\r\n      </div>\r\n      <div>{(flow === 3 && this.props.categories)?\r\n      <RateOptions\r\n      key={this.state.category_index}\r\n      index={this.state.category_index}\r\n      max_id={this.props.max_id}\r\n      categories={this.props.categories}\r\n      setCategories={this.props.setCategories}\r\n      setFlow={this.setFlow} >\r\n      </RateOptions> : null}\r\n      </div>\r\n      <div>\r\n        {(flow === 4 && this.props.categories)?\r\n       <OverallRatings\r\n       key={this.state.category_index}\r\n       index={this.state.category_index}\r\n       categories={this.props.categories}\r\n       setCategories={this.props.setCategories}\r\n       client_categories={this.props.client_categories}\r\n       setFlow={this.setFlow}>\r\n       </OverallRatings>: null}\r\n      </div>\r\n      <div>\r\n          {flow === 5? this.setCategoryIndex(): null}\r\n      </div>\r\n        </main>)\r\n    }\r\n}\r\n\r\nexport default FirstStageWrapper","import { useState } from \"react\"\r\n\r\nconst SelectOptionTable = (props) => {\r\n\r\n    const shuffled_category = props.category.sort(function(){ return Math.random() - 0.5});\r\n\r\n    const default_msg = {\r\n        id: -1,\r\n        name: props.default_msg,\r\n    }\r\n\r\n    const [chosen, setChosen] = useState(default_msg)\r\n    const [show, setShow] = useState(false)\r\n    const [margin, setMargin] = useState('') \r\n\r\n    const handleChange = (obj) => {\r\n        if (chosen !== obj){\r\n            setChosen(obj)\r\n            props.handleSubmit(obj)\r\n            setShow(false)\r\n        }\r\n    }\r\n\r\n    function createTable(){\r\n        const n_cols = 4\r\n        var two_d_data = []\r\n        const category_arr_copy = shuffled_category.slice(0)\r\n        while(category_arr_copy.length) two_d_data.push(category_arr_copy.splice(0,n_cols));\r\n        if ((props.index === 2) && (margin !== 'margin-op2')){\r\n            setMargin('margin-op2')\r\n        }\r\n        else if ((props.index === 1) && (margin !== 'margin-op1')){\r\n            setMargin('margin-op1')   \r\n        }\r\n        return (\r\n            <div className='option-box'>\r\n            <table className={'table-border ' + margin}>\r\n                    <tbody>\r\n                {two_d_data.map((d, i)=> (\r\n                    <tr key={i}>\r\n                        {d.map((option, index) => showOption(option, index))}\r\n                    </tr>))}\r\n                    </tbody>\r\n                </table>\r\n                </div>\r\n        )\r\n    }\r\n\r\n    const showOption = (option, index) => {\r\n        return (\r\n            <td key={index}>{remove_button(option)}</td>\r\n        )\r\n    }\r\n\r\n    function remove_button(obj){\r\n        return (\r\n            <button className='table-button' onClick={() => {handleChange(obj)}}>{obj.name}</button>\r\n        )\r\n    }\r\n    \r\n    return(\r\n        <div>\r\n        <label className='option-attr'>\r\n            {props.title}:\r\n        </label>\r\n        <button className='radio-option' disabled={props.disable} onClick={()=>{setShow(!show)}}>{chosen.name}</button>\r\n        {show? createTable(): null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelectOptionTable","import * as constants from '../constants'\r\nimport '../App.css'\r\nimport 'react-slidedown/lib/slidedown.css'\r\nimport SelectOptionTable from './SelectOptionTable'\r\n\r\n\r\nconst OptionBox = (props) => {\r\n\r\n\r\n    const showSlider = (title, index) => {\r\n        return(\r\n            <SelectOptionTable\r\n            category={props.categories[index]}\r\n            index={props.index}\r\n            title={title}\r\n            default_msg={props.default_msg}\r\n            disable={props.disable}\r\n            handleSubmit={props.handleSubmit}/>\r\n        )\r\n    }\r\n\r\n    const showAttr = (attr, title) => {\r\n        return (\r\n            <label className='option-attr'>{title}: {attr.name}</label>\r\n        )\r\n    }\r\n\r\n    const showBox = () => {\r\n        return (\r\n            <div className='box'>\r\n                <label className='option-title'>Option {props.index}</label>\r\n                {props.attr1? showAttr(props.attr1, constants.CATEGORY_1_SINGULAR): showSlider(constants.CATEGORY_1_SINGULAR, 0)}\r\n                {props.attr2? showAttr(props.attr2, constants.CATEGORY_2_SINGULAR): showSlider(constants.CATEGORY_2_SINGULAR, 1)}\r\n                \r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {showBox()}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default OptionBox","import { useState } from 'react'\r\nimport '../App.css'\r\n\r\nconst QUESTION = 'Are the options equivalent now?'\r\nconst OPTION_1 = 'Yes, they are approximately the same'\r\nconst OPTION_2 = 'I still highly prefer option 1'\r\nconst OPTION_3 = 'I still highly prefer option 2'\r\n\r\nconst DialogBox = (props) => {\r\n\r\n    const [answer, setAnswer] = useState(0)\r\n    const [disable, setDisable] = useState(true)\r\n\r\n    const onChange = (value) => {\r\n        setAnswer(value)\r\n        setDisable(false)\r\n    }\r\n\r\n    return (\r\n        <div className='dialog-box'>\r\n            <label className='option-title'>{QUESTION}</label>\r\n            <div>\r\n                <input type=\"radio\" checked={answer === 1} className=\"radio-option\" onChange={()=>{onChange(1)}}/> \r\n                <label className=\"radio-title\"> {OPTION_1} </label>\r\n                <div className='under'></div>\r\n                <input type=\"radio\" checked={answer === 2} className=\"radio-option\" onChange={()=>{onChange(2)}}/>\r\n                <label className=\"radio-title\"> {OPTION_2} </label>\r\n                <div className='under'></div>\r\n                <input type=\"radio\" checked={answer === 3} className=\"radio-option\" onChange={()=>{onChange(3)}}/>\r\n                <label className=\"radio-title\"> {OPTION_3} </label>\r\n            </div>\r\n            <button className='confirm-button' disabled={disable} onClick={()=>{props.save_answer(answer)}}>Confirm</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogBox","import React from 'react'\r\nimport '../App.css'\r\nimport OptionBox from './OptionBox'\r\nimport * as constants from '../constants'\r\nimport DialogBox from './DialogBox'\r\n\r\n\r\nconst INSTRUCTIONS = 'Please fill in the missing value to make the options of equal value.'\r\nconst DEFAULT_MSG = 'Please choose'\r\nconst WARNING_MAG = 'Please choose a value to make the options equivalent'\r\n\r\nexport class CompareTwoOptions extends React.PureComponent{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            cur_chosen: null,\r\n            attr_array: this.chooseAttribues(),\r\n            disable_next: true,\r\n            call_timer: true,\r\n            show_dialog_box: false,\r\n        }\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.setDisableNext = this.setDisableNext.bind(this)\r\n        this.saveDialogAnswer = this.saveDialogAnswer.bind(this)\r\n    }\r\n\r\n    chooseAttribues(){\r\n        const num_attr = 4\r\n        const rand_index = Math.floor(Math.random() * num_attr)\r\n        let attr_array = new Array(num_attr).fill(0)\r\n        this.fillArray(attr_array, rand_index)\r\n        return attr_array\r\n        \r\n    }\r\n\r\n    fillOneOption(attr_array, rand_index, start_rand, end_rand, start_op, end_op, arrays, half_length){   \r\n        for (let i = start_op; i < end_op; i++){\r\n            attr_array[i] = this.props.cur_option[i%half_length]\r\n        }\r\n        for(let i = start_rand; i < end_rand; i++){\r\n            if (i === rand_index){\r\n                attr_array[i] = null\r\n            }\r\n            else{\r\n                let array = arrays[i % half_length].filter(item => !attr_array.includes(item))\r\n                let rand_attr = array[Math.floor(Math.random() * array.length)]\r\n                attr_array[i] = rand_attr\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    fillArray(attr_array, rand_index){\r\n        const is_attention_check = Math.floor(Math.random() * 100)\r\n        const arrays = [this.props.categories[0].slice(0), this.props.categories[1].slice(0)]\r\n        let half_length = attr_array.length / 2\r\n        if (this.props.cur_match === 1){\r\n            this.fillAllAttributes(attr_array, rand_index, arrays, half_length)\r\n        }\r\n        else if (rand_index < half_length){\r\n            this.fillOneOption(attr_array, rand_index, 0, half_length, half_length, attr_array.length, arrays, half_length)\r\n        }\r\n        else{\r\n            this.fillOneOption(attr_array, rand_index, half_length, attr_array.length, 0, half_length, arrays, half_length)\r\n        }\r\n        this.attentionCheck(attr_array, rand_index, is_attention_check, half_length)\r\n    }\r\n\r\n    fillAllAttributes(attr_array, rand_index, arrays, half_length){\r\n        for (let i = 0; i < attr_array.length; i++){\r\n            if (i === rand_index){\r\n                attr_array[rand_index] = null\r\n            }\r\n            else{\r\n                let array = arrays[i % half_length]\r\n                let rand_attr = array[Math.floor(Math.random() * array.length)]\r\n                attr_array[i] = rand_attr\r\n                arrays[i % half_length] = arrays[i % half_length].filter(item => item !== rand_attr)\r\n            }\r\n        }\r\n    }\r\n\r\n    attentionCheck(attr_array, rand_index, is_attention_check, half_length){\r\n        if (is_attention_check < constants.ATTENTION_TRIALS){\r\n            for (let j = 0; j < half_length; j ++)\r\n            {\r\n                if (rand_index % half_length !== j){\r\n                    attr_array[j + half_length] = attr_array[j]\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    showInstructions(){\r\n        return (\r\n            <h3 className='instructions'>{INSTRUCTIONS}</h3>\r\n        )\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.mountTime = (new Date()).getTime();\r\n      }\r\n\r\n    saveDialogAnswer(answer){\r\n        this.setState({\r\n            show_dialog_box: false,\r\n        })\r\n        this.saveAndContinue(answer)\r\n    }\r\n\r\n    saveAndContinue(answer){\r\n        const currentTime = (new Date()).getTime();\r\n        const reaction_time = currentTime - this.mountTime // save the reaction time\r\n        const updated_set = {\r\n            id: this.props.index,\r\n            cur_match: this.props.cur_match,\r\n            cur_set: this.props.cur_set,\r\n            option1: this.state.attr_array.slice(0, 2),\r\n            option2: this.state.attr_array.slice(2),\r\n            attr_chosen: this.state.cur_chosen,\r\n            reaction_time: reaction_time,\r\n            is_equivalent: answer,\r\n        }\r\n        this.props.setFlow(updated_set)\r\n    }\r\n\r\n    handleSubmit(value) {\r\n        if (value.name !== DEFAULT_MSG){\r\n            this.setState({\r\n                cur_chosen: value,\r\n            })\r\n            this.setDisableNext()\r\n        }\r\n        else{\r\n            this.setState({\r\n                cur_chosen: null,\r\n                disable_next: true\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    setDisableNext(){\r\n        const to_seconds = 1000\r\n        const currentTime = (new Date()).getTime();\r\n        if ((currentTime > (this.mountTime + (to_seconds * constants.MINIMAL_TIME)))){\r\n            this.setState({disable_next: false})\r\n        }\r\n        else if (this.state.call_timer) {\r\n            this.setState({call_timer: false})\r\n            setTimeout(this.setDisableNext, constants.MINIMAL_TIME * to_seconds);\r\n        }\r\n    }\r\n\r\n    showOptions(){\r\n        return (\r\n            <div>\r\n                <OptionBox\r\n                index={1}\r\n                categories={this.props.categories_to_choose}\r\n                attr1={this.state.attr_array[0]}\r\n                attr2={this.state.attr_array[1]}\r\n                disable={this.state.show_dialog_box}\r\n                default_msg={DEFAULT_MSG}\r\n                handleSubmit={this.handleSubmit}>\r\n                </OptionBox>\r\n                <OptionBox\r\n                index={2}\r\n                categories={this.props.categories_to_choose}\r\n                attr1={this.state.attr_array[2]}\r\n                attr2={this.state.attr_array[3]}\r\n                disable={this.state.show_dialog_box}\r\n                default_msg={DEFAULT_MSG}\r\n                handleSubmit={this.handleSubmit}>\r\n                </OptionBox>\r\n            </div>        \r\n        )\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <div className='compare-options-body'>\r\n                {this.showInstructions()}\r\n                {this.props.categories? this.showOptions() : null}\r\n                <button className='submit-abs' \r\n                        disabled={this.state.disable_next} \r\n                        onClick={()=>{this.setState({show_dialog_box: true})}}>\r\n                        Next\r\n                </button>\r\n                {this.state.show_dialog_box? <DialogBox save_answer={this.saveDialogAnswer}></DialogBox>: null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CompareTwoOptions","import '../App.css'\r\n\r\n//also clear local storage\r\nconst ThankYouScreen = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            {localStorage.clear()}\r\n            <h3 className='instructions'>Thank you for your participation! The Hart lab thanks you.</h3>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default ThankYouScreen","import React from 'react'\r\nimport '../App.css'\r\nimport * as constants from '../constants.js'\r\nimport CompareTwoOptions from './CompareTwoOptions'\r\nimport ThankYouScreen from './ThankYouScreen'\r\n\r\nexport class SecondStageWrapper extends React.PureComponent {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            cur_set: 1,\r\n            cur_match: 1,\r\n            index: 0,\r\n            cur_set_array:[],\r\n            choices: [],\r\n            cur_option: [],\r\n            cur_set_categories: this.props.categories\r\n        }\r\n        this.setFlow = this.setFlow.bind(this)\r\n    }\r\n\r\n\r\n    componentDidUpdate(){\r\n        if ((localStorage.getItem('cur_set')) && this.state.cur_set !== parseInt(String(localStorage.getItem('cur_set')), 10)){\r\n            this.setState({\r\n                cur_set: parseInt(String(localStorage.getItem('cur_set')), 10)\r\n            })\r\n        }\r\n    }\r\n\r\n    getOptionForNextMatch(option1, option2, attr_chosen){\r\n        let option_to_return = []\r\n        for (let i = 0; i < 2; i++){\r\n            if (!option1[i]){\r\n                option_to_return = option1\r\n                option_to_return[i] = attr_chosen\r\n            }\r\n            if (!option2[i]){\r\n                option_to_return = option2\r\n                option_to_return[i] = attr_chosen\r\n            }\r\n        }\r\n        return (option_to_return)\r\n    }\r\n\r\n    findItemsToRemove(choices){\r\n        for (let i = 0; i < 2; i++){\r\n            if (choices.option1[i] === null){\r\n                return (choices.option2)\r\n            }\r\n            if (choices.option2[i] === null){\r\n                return (choices.option1)\r\n            }\r\n        }\r\n    }\r\n\r\n    setFlow(choices){\r\n        this.setState({\r\n            index: this.state.index + 1,\r\n        })\r\n        if (this.state.cur_match < constants.N_MATCHES){\r\n            let new_cur_set_categories = this.state.cur_set_categories.map(array_item => \r\n                array_item.filter(item => \r\n                    (!this.findItemsToRemove(choices).includes(item))))\r\n            let new_cur_array = this.state.cur_set_array.slice(0)\r\n            new_cur_array.push(choices)\r\n            this.setState({\r\n                cur_match: this.state.cur_match + 1,\r\n                cur_option: this.getOptionForNextMatch(choices.option1, choices.option2, choices.attr_chosen),\r\n                cur_set_array: new_cur_array,\r\n                cur_set_categories: new_cur_set_categories,\r\n            })\r\n        }\r\n        else if (this.state.cur_set <= constants.N_SETS) {\r\n            localStorage.setItem('cur_set', this.state.cur_set + 1)\r\n            this.getOptionForNextMatch(choices.option1, choices.option2, choices.attr_chosen)\r\n            this.state.cur_set_array.push(choices)\r\n            let new_choices = this.state.choices.slice(0)\r\n            new_choices.push(this.state.cur_set_array)\r\n            this.setState({\r\n                cur_match: 1,\r\n                cur_set: this.state.cur_set + 1,\r\n                cur_set_array: [],\r\n                choices: new_choices,\r\n                cur_set_categories: this.props.categories\r\n            })\r\n            this.props.setChoices(new_choices)\r\n        }\r\n        else {\r\n            this.props.setChoices(this.state.choices)\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                {(this.state.cur_set <= constants.N_SETS)? \r\n                <CompareTwoOptions\r\n                key={this.state.index}\r\n                index={this.state.index}\r\n                cur_match={this.state.cur_match}\r\n                cur_set={this.state.cur_set}\r\n                categories={this.state.cur_set_categories}\r\n                categories_to_choose={this.props.categories}\r\n                cur_option={this.state.cur_option}\r\n                setFlow={this.setFlow}>\r\n                </CompareTwoOptions> :\r\n                <ThankYouScreen/>}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default SecondStageWrapper","import React from 'react';\nimport './App.css';\nimport {createApiClient, createApiClientChoices} from './api'; //connection to server\nimport StartExperiment from './components/StartExperiment';\nimport * as constants from './constants.js'\nimport FirstStageWrapper from './components/FirstStageWrapper';\nimport SecondStageWrapper from './components/SecondStageWrapper';\n\n\nconst FIRST_TITLE = 'Welcome'\nconst SECOND_TITLE_PART_1 = 'What do you prefer?'\nconst SECOND_TITLE_PART_2 = 'Make the two options equal'\nconst INSTRUCTIONS_PART_1 = 'In this task, we ask you to rate your preferences in a given category. You will see different options in a given category. Please rate them one by one on a scale of 1-1000.'\nconst INSTRUCTIONS_PART_2 = 'In this task, we ask you to compare between two options, each including a ' + constants.CATEGORY_1_SINGULAR + ' and a ' + constants.CATEGORY_2_SINGULAR + '. At each screen, you will see two options and their attributes, with one attribute value missing. Please type in an attribute value that will make the two options equally preferred, from the pools of the first task.'\n\n\n\nexport type AppState = {\n  flow: number,\n  category_index: number,\n  max_id: number,\n  client_catigories: object[][],\n  categories?: object[][],\n  choices?: object[][]\n}\n\nconst api = createApiClient()\nconst apiChoices = createApiClientChoices()\n\nexport class App extends React.PureComponent<{}, AppState> {\n\n \n  state: AppState = {\n    flow: 1,\n    category_index: 0,\n    max_id: 1000,\n    client_catigories: [[],[]],\n\t}\n\n  getCategories(){\n    if (this.state.client_catigories !== [[],[]]){\n      return (this.state.client_catigories)\n    }\n    return this.state.categories\n  }\n\n  async componentDidMount() {\n    this.setState({\n      categories: await api.getProperties(this.state.client_catigories),\n    });\n    if(this.state.flow === 1){\n      this.setState({max_id: this.setMaxCategoryId()})\n    }\n    \n  }\n\n  componentDidUpdate(){\n   \n    if ((localStorage.getItem('flow')) && (this.state.flow !== parseInt(String(localStorage.getItem('flow')), 10))){\n      this.setState({\n        flow: parseInt(String(localStorage.getItem('flow')), 10)\n      })\n    }\n    \n  }\n\n  //from strig array to json array ---> save client data as json\n  createOptions = (str_arr: string[], id_inc: number) => {\n    let options_array = []\n    for (let i = 0; i < str_arr.length; i++){\n      let temp_option = {\n        id: i + id_inc,\n        name: str_arr[i],\n        rating: 0,\n      }\n      options_array.push(temp_option)\n    }\n    return options_array\n  }\n\n  setCategoryIndex = () => {\n    let add_to_index = 1\n    if (this.state.category_index === add_to_index){\n      add_to_index = -1\n    }\n    this.setState({\n      category_index: this.state.category_index + add_to_index\n    })\n  }\n\n  setCategories = async (newCategory: object[]) => {\n    var new_client_categories = this.state.client_catigories.slice(0)\n    new_client_categories[this.state.category_index] = newCategory\n    this.setState({\n      client_catigories: new_client_categories,\n      categories: await api.getProperties(new_client_categories)\n    })\n  }\n\n  setFlow = () => {\n    localStorage.setItem('flow', String(this.state.flow + 1));\n    this.setState({\n      flow: this.state.flow + 1\n    })\n  }\n\n  addParticipentOptions = async (new_caterories: object[]) => {\n    var new_client_categories = this.state.client_catigories.slice(0)\n    new_client_categories[this.state.category_index] = new_client_categories[this.state.category_index].concat(new_caterories)\n    this.setState({\n      client_catigories: new_client_categories,\n      categories: await api.getProperties(new_client_categories)\n    })\n  }\n\nsetMaxCategoryId(){\n  let max_id = constants.MAX_CATEGORY_DISPLAY\n  if (this.state.categories){\n    for (let category of this.state.categories){\n      let temp_id = category.length\n      if (temp_id > max_id){\n        max_id = temp_id\n      }\n    }\n  }\n  return max_id\n}\n\nsetChoices = async (choices: object[][]) => {\n  this.setState({\n    choices: await apiChoices.getProperties(choices)\n  })\n}\n\n  render() {\n    let title_2 = SECOND_TITLE_PART_1\n    let instructions = INSTRUCTIONS_PART_1\n    if (this.state.flow === 3){\n      title_2 = SECOND_TITLE_PART_2\n      instructions = INSTRUCTIONS_PART_2\n    }\n    return( \n    <main>\n      <div>\n        {(this.state.flow === 1 || this.state.flow === 3)?\n        <StartExperiment \n        first_title={FIRST_TITLE}\n        second_title={title_2}\n        instructions={instructions}\n        flow={this.state.flow}\n        setFlow={this.setFlow}>\n        </StartExperiment> : null}\n      </div> \n      <div>\n        {(this.state.flow === 2 && this.state.categories)?\n        <FirstStageWrapper\n        categories={this.state.categories}\n        client_categories={this.state.client_catigories}\n        max_id={this.state.max_id}\n        setCategories={this.setCategories}\n        addParticipentOptions={this.addParticipentOptions}\n        setCategoryIndex={this.setCategoryIndex}\n        setFlow={this.setFlow}>\n        </FirstStageWrapper> : null}\n      </div>\n      <div>\n      {this.state.flow === 4?\n       <SecondStageWrapper\n       categories={this.state.categories}\n       setChoices={this.setChoices}>\n       </SecondStageWrapper>\n       :null}\n      </div>   \n    </main>\n    )\n  }\n\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}